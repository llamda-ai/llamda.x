{"parents": [], "prev": {"link": "../usage/", "title": "&lt;no title&gt;"}, "next": null, "title": "API Reference", "meta": {"wordcount": {"words": 2, "minutes": 0}}, "body": "<section id=\"module-llamda_fn\">\n<span id=\"api-reference\"></span><h1>API Reference<a class=\"headerlink\" href=\"#module-llamda_fn\" title=\"Link to this heading\">\u00b6</a></h1>\n<p>Llamda is a Python library for transforming Python functions into LLM function calls.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">llamda_fn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">Llamda</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">llamda_functions</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions\" title=\"llamda_fn.functions.llamda_functions.LlamdaFunctions\"><span class=\"pre\">LlamdaFunctions</span></a></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">llm_api</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">OpenAI</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">llm_api_config</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">retry</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">int</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">3</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">llm_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">'gpt-4-0613'</span></span></em><span class=\"sig-paren\">)</span><a class=\"headerlink\" href=\"#llamda_fn.Llamda\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">BaseModel</span></code></p>\n<p>Llamda class to create, decorate and run Llamda functions.</p>\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.Config\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">Config</span></span><a class=\"headerlink\" href=\"#llamda_fn.Llamda.Config\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Config for the Llamda class.</p>\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.Config.arbitrary_types_allowed\">\n<span class=\"sig-name descname\"><span class=\"pre\">arbitrary_types_allowed</span></span><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">True</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.Config.arbitrary_types_allowed\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.llamda_functions\">\n<span class=\"sig-name descname\"><span class=\"pre\">llamda_functions</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions\" title=\"llamda_fn.functions.llamda_functions.LlamdaFunctions\"><span class=\"pre\">LlamdaFunctions</span></a></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.llamda_functions\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.llamdafy\">\n<span class=\"sig-name descname\"><span class=\"pre\">llamdafy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">*</span></span><span class=\"n\"><span class=\"pre\">args</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Any</span></span></em>, <em class=\"sig-param\"><span class=\"o\"><span class=\"pre\">**</span></span><span class=\"n\"><span class=\"pre\">kwargs</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">Any</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">Callable</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">...</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></span></span><a class=\"headerlink\" href=\"#llamda_fn.Llamda.llamdafy\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Decorator method to create a Llamda function.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.llm_api\">\n<span class=\"sig-name descname\"><span class=\"pre\">llm_api</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">OpenAI</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.llm_api\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.llm_api_config\">\n<span class=\"sig-name descname\"><span class=\"pre\">llm_api_config</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.llm_api_config\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.llm_name\">\n<span class=\"sig-name descname\"><span class=\"pre\">llm_name</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">str</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.llm_name\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.model_computed_fields\">\n<span class=\"sig-name descname\"><span class=\"pre\">model_computed_fields</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">ClassVar</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">ComputedFieldInfo</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">]</span></span></em><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">{}</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.model_computed_fields\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>A dictionary of computed field names and their corresponding <cite>ComputedFieldInfo</cite> objects.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.model_config\">\n<span class=\"sig-name descname\"><span class=\"pre\">model_config</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">ClassVar</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">ConfigDict</span><span class=\"p\"><span class=\"pre\">]</span></span></em><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">{'arbitrary_types_allowed':</span> <span class=\"pre\">True}</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.model_config\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Configuration for the model, should be a dictionary conforming to [<cite>ConfigDict</cite>][pydantic.config.ConfigDict].</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.model_fields\">\n<span class=\"sig-name descname\"><span class=\"pre\">model_fields</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">ClassVar</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">FieldInfo</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">]</span></span></em><em class=\"property\"><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"pre\">{'llamda_functions':</span> <span class=\"pre\">FieldInfo(annotation=LlamdaFunctions,</span> <span class=\"pre\">required=False,</span> <span class=\"pre\">default_factory=LlamdaFunctions),</span> <span class=\"pre\">'llm_api':</span> <span class=\"pre\">FieldInfo(annotation=OpenAI,</span> <span class=\"pre\">required=True),</span> <span class=\"pre\">'llm_api_config':</span> <span class=\"pre\">FieldInfo(annotation=dict[str,</span> <span class=\"pre\">Any],</span> <span class=\"pre\">required=False,</span> <span class=\"pre\">default_factory=dict),</span> <span class=\"pre\">'llm_name':</span> <span class=\"pre\">FieldInfo(annotation=str,</span> <span class=\"pre\">required=False,</span> <span class=\"pre\">default='gpt-4-0613'),</span> <span class=\"pre\">'retry':</span> <span class=\"pre\">FieldInfo(annotation=int,</span> <span class=\"pre\">required=False,</span> <span class=\"pre\">default=3)}</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.model_fields\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Metadata about the fields defined on the model,\nmapping of field names to [<cite>FieldInfo</cite>][pydantic.fields.FieldInfo].</p>\n<p>This replaces <cite>Model.__fields__</cite> from Pydantic V1.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.model_validator\">\n<span class=\"sig-name descname\"><span class=\"pre\">model_validator</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">values</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span></span></span><a class=\"headerlink\" href=\"#llamda_fn.Llamda.model_validator\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Validate the model and create the OpenAI client if needed.</p>\n</dd></dl>\n\n<dl class=\"py attribute\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.retry\">\n<span class=\"sig-name descname\"><span class=\"pre\">retry</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">int</span></em><a class=\"headerlink\" href=\"#llamda_fn.Llamda.retry\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd></dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.Llamda.run\">\n<span class=\"sig-name descname\"><span class=\"pre\">run</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">messages</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">list</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">ChatCompletionSystemMessageParam</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">ChatCompletionUserMessageParam</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">ChatCompletionAssistantMessageParam</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">ChatCompletionToolMessageParam</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">ChatCompletionFunctionMessageParam</span><span class=\"p\"><span class=\"pre\">]</span></span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">function_names</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">str</span></span></span><a class=\"headerlink\" href=\"#llamda_fn.Llamda.run\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Run the OpenAI API with the prepared data.</p>\n</dd></dl>\n\n</dd></dl>\n\n<dl class=\"py class\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.LlamdaFunctions\">\n<em class=\"property\"><span class=\"pre\">class</span><span class=\"w\"> </span></em><span class=\"sig-prename descclassname\"><span class=\"pre\">llamda_fn.</span></span><span class=\"sig-name descname\"><span class=\"pre\">LlamdaFunctions</span></span><a class=\"headerlink\" href=\"#llamda_fn.LlamdaFunctions\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Bases: <code class=\"xref py py-class docutils literal notranslate\"><span class=\"pre\">object</span></code></p>\n<p>Main class, produces a decorator for creating Llamda functions and manages their execution.</p>\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.LlamdaFunctions.execute_function\">\n<span class=\"sig-name descname\"><span class=\"pre\">execute_function</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">function_name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">function_args</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">Dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span></span></span><a class=\"headerlink\" href=\"#llamda_fn.LlamdaFunctions.execute_function\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Execute a function and return the result or error message.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.LlamdaFunctions.llamdafy\">\n<span class=\"sig-name descname\"><span class=\"pre\">llamdafy</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">name</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em>, <em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">description</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">str</span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">Callable</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">Callable</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">P</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">R</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">LlamdaFunction</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">TypeVar</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">LlamdaPydantic</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">TypeVar</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">]</span></span></span></span><a class=\"headerlink\" href=\"#llamda_fn.LlamdaFunctions.llamdafy\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Decorator for creating Llamda functions.</p>\n</dd></dl>\n\n<dl class=\"py method\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.LlamdaFunctions.prepare_tools\">\n<span class=\"sig-name descname\"><span class=\"pre\">prepare_tools</span></span><span class=\"sig-paren\">(</span><em class=\"sig-param\"><span class=\"n\"><span class=\"pre\">tool_names</span></span><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"n\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">None</span></span><span class=\"w\"> </span><span class=\"o\"><span class=\"pre\">=</span></span><span class=\"w\"> </span><span class=\"default_value\"><span class=\"pre\">None</span></span></em><span class=\"sig-paren\">)</span> <span class=\"sig-return\"><span class=\"sig-return-icon\">&#x2192;</span> <span class=\"sig-return-typehint\"><span class=\"pre\">List</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">ChatCompletionToolParam</span><span class=\"p\"><span class=\"pre\">]</span></span></span></span><a class=\"headerlink\" href=\"#llamda_fn.LlamdaFunctions.prepare_tools\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Prepare the tools for the OpenAI API.</p>\n</dd></dl>\n\n<dl class=\"py property\">\n<dt class=\"sig sig-object py\" id=\"llamda_fn.LlamdaFunctions.tools\">\n<em class=\"property\"><span class=\"pre\">property</span><span class=\"w\"> </span></em><span class=\"sig-name descname\"><span class=\"pre\">tools</span></span><em class=\"property\"><span class=\"p\"><span class=\"pre\">:</span></span><span class=\"w\"> </span><span class=\"pre\">Dict</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">str</span><span class=\"p\"><span class=\"pre\">,</span></span><span class=\"w\"> </span><span class=\"pre\">LlamdaFunction</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"w\"> </span><span class=\"p\"><span class=\"pre\">|</span></span><span class=\"w\"> </span><span class=\"pre\">LlamdaPydantic</span><span class=\"p\"><span class=\"pre\">[</span></span><span class=\"pre\">Any</span><span class=\"p\"><span class=\"pre\">]</span></span><span class=\"p\"><span class=\"pre\">]</span></span></em><a class=\"headerlink\" href=\"#llamda_fn.LlamdaFunctions.tools\" title=\"Link to this definition\">\u00b6</a></dt>\n<dd><p>Get the tools.</p>\n</dd></dl>\n\n</dd></dl>\n\n</section>\n", "metatags": "<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n", "rellinks": [["genindex", "General Index", "I", "index"], ["py-modindex", "Python Module Index", "", "modules"], ["usage", "&lt;no title&gt;", "P", "previous"]], "sourcename": "api_reference.md.txt", "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">API Reference</a><ul>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.Config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.Config</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.Config.arbitrary_types_allowed\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.Config.arbitrary_types_allowed</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.llamda_functions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.llamda_functions</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.llamdafy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.llamdafy()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.llm_api\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.llm_api</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.llm_api_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.llm_api_config</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.llm_name\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.llm_name</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.model_computed_fields\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.model_computed_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.model_config\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.model_config</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.model_fields\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.model_fields</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.model_validator\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.model_validator()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.retry\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.retry</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.Llamda.run\"><code class=\"docutils literal notranslate\"><span class=\"pre\">Llamda.run()</span></code></a></li>\n</ul>\n</li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LlamdaFunctions</span></code></a><ul>\n<li><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions.execute_function\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LlamdaFunctions.execute_function()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions.llamdafy\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LlamdaFunctions.llamdafy()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions.prepare_tools\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LlamdaFunctions.prepare_tools()</span></code></a></li>\n<li><a class=\"reference internal\" href=\"#llamda_fn.LlamdaFunctions.tools\"><code class=\"docutils literal notranslate\"><span class=\"pre\">LlamdaFunctions.tools</span></code></a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n", "display_toc": true, "page_source_suffix": ".md", "current_page_name": "api_reference", "sidebars": ["about.html", "navigation.html", "relations.html", "searchbox.html", "donate.html"], "alabaster_version": "0.7.16", "alabaster_version_info": [0, 7, 16]}